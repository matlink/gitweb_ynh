# path to git projects (<project>.git)
$projectroot = "/home/git/repositories/";

# default order is "project" - I prefer sorting by age, altough it's more CPU intensive
$default_projects_order = "age";

# directory to use for temp files
$git_temp = "/tmp";

# site name shown at the page title
#$site_name = "Git trees";

# target of the home link on top of all pages
#$home_link = $my_uri || "/";

# html text to include at home page
#$home_text = "indextext.html";

# file with project list; by default, simply scan the projectroot dir.
#$projects_list = "/home/git/projects.list";

# stylesheet to use
#@stylesheets = ("static/gitweb.css");

# javascript code for gitweb
#$javascript = "static/gitweb.js";

# logo to use
#$logo = "static/git-logo.png";

# the 'favicon'
#$favicon = "static/git-favicon.png";

# this prevents gitweb to show hidden repositories
#$export_ok = "git-daemon-export-ok";
#$strict_export = 1;
# and this prevents gitweb to show any repository that doesn't have a file named 'gitweb-export-ok'
#$export_ok = "gitweb-export-ok";

# This lets it make the URLs you see in the header
#@git_base_url_list = ( 'git://' );
# git-diff-tree(1) options to use for generated patches
#@diff_opts = ("-M");
@diff_opts = ();

# Enable PATH_INFO so the server can produce URLs of the
# form: http://example.org/domain/project.git/xxx/xxx
# This allows for pretty URLs *within* the Git repository,
# also needs the Apache rewrite rules for full effect.
#$feature{'pathinfo'}{'default'} = [1];

# Neat way of prefixing the top URL listing
#our @extra_breadcrumbs = (
#      [ 'Site title or whatever' => 'http://example.org/' ],
#    );

# List avatars next to committers
#$feature{'avatar'}{'default'} = ['gravatar'];

# The category name is read from .git/category, in the same manner as .git/description.
#$projects_list_group_categories = 1;
#$project_list_default_category = "misc";

$projects_list_description_width = 80;

# Enable blame, pickaxe search, snapshop, search, and grep
# support, but still allow individual projects to turn them off.
# These are features that users can use to interact with your Git trees. They
# consume some CPU whenever a user uses them, so you can turn them off if you
# need to.  Note that the 'override' option means that you can override the
# setting on a per-repository basis.
$feature{'blame'}{'default'} = [1];
$feature{'blame'}{'override'} = [1];

$feature{'pickaxe'}{'default'} = [1];
$feature{'pickaxe'}{'override'} = [1];

$feature{'snapshot'}{'default'} = [1];
$feature{'snapshot'}{'override'} = [1];

$feature{'search'}{'default'} = [1];

$feature{'grep'}{'default'} = [1];
$feature{'grep'}{'override'} = [1];

$feature{'highlight'}{'default'} = [1];
